/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
        custom_alt: custom_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "CUSTOM_ALT";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_ALT>,
                <&kp LA(SPACE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Master {
            bindings = <
  &kp TAB                  &kp Q  &kp W  &kp E             &kp R          &kp T    &kp Y      &kp U      &kp I        &kp O    &kp P     &kp EQUAL
  &mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &lt 1 D           &lt 3 F        &kp G    &kp H      &lt 3 J    &kp K        &kp L    &kp SEMI  &mt RCTRL SQT
  &kp LSHIFT               &kp Z  &kp X  &kp C             &kp V          &kp B    &kp N      &kp M      &kp COMMA    &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                  &none  &kp LEFT_COMMAND  &kp BACKSPACE  &mo 2    &kp ENTER  &kp SPACE  &custom_alt  &none
            >;
        };

        NUMBERS {
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans    &kp KP_DOT      &kp N7  &kp N8  &kp N9  &kp KP_PLUS   &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS       &kp N4  &kp N5  &kp N6  &kp KP_MINUS  &trans
  &trans  &trans  &trans  &trans  &trans  &trans    &kp UNDERSCORE  &kp N1  &kp N2  &kp N3  &kp KP_SLASH  &kp KP_MULTIPLY
                  &trans  &trans  &trans  &trans    &trans          &trans  &kp N0  &trans
            >;
        };

        NAV {
            bindings = <
  &kp LG(GRAVE)  &trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN         &kp C_VOLUME_UP              &trans    &kp PAGE_UP  &kp PAGE_DOWN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT
  &trans         &trans  &trans  &trans      &kp LS(LG(LEFT_BRACKET))  &kp LS(LG(RIGHT_BRACKET))    &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT   &kp UP            &trans
  &trans         &trans  &trans  &trans      &kp LC(LEFT)              &kp LC(RIGHT)                &trans    &kp HOME     &kp END        &kp LEFT    &kp DOWN          &kp RIGHT
                         &mo 4   &trans      &trans                    &trans                       &kp F20   &kp F21      &trans         &trans
            >;
        };

        Symbols {
            bindings = <
  &trans  &kp GRAVE          &kp AT_SIGN      &kp PIPE     &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp BACKSLASH   &kp ASTERISK   &trans         &trans            &trans     &trans
  &trans  &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp MINUS       &kp AMPERSAND  &kp HASH       &trans            &kp COLON  &trans
  &trans  &kp SINGLE_QUOTE   &kp TILDE        &kp PERCENT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp UNDERSCORE  &kp CARET      &kp LESS_THAN  &kp GREATER_THAN  &trans     &trans
                             &trans           &trans       &trans                &trans                   &trans          &trans         &trans         &trans
            >;
        };

        SYSTEM {
            bindings = <
  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
